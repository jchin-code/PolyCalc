#BlueJ class context
comment0.target=Polynomial
comment0.text=\n\ Creates\ a\ polynomial\ expression\ as\ a\ collection\ of\ monomials.\ Polynomials\n\ may\ have\ one\ or\ more\ terms.\n\n\ @author\ Jordan\ Chin\n\ @version\ 1.1\n
comment1.params=
comment1.target=Polynomial()
comment1.text=\n\ Constructs\ an\ empty\ Polynomial\ object,\ according\ to\ the\ order\ of\n\ exponents,\ highest\ to\ lowest.\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\n\ Tests\ the\ methods\ in\ the\ Polynomial\ class.\n\ @param\ args\ arguments\ of\ method\n
comment11.params=poly
comment11.target=Polynomial\ add(Polynomial)
comment11.text=\n\ Adds\ two\ Polynomials\ together,\ returning\ the\ result\ from\ the\ operation.\n\ @param\ poly\ the\ Polynomial\ which\ is\ being\ added\ to\ the\ one\ being\n\ called.\n\ @return\ the\ Polynomial\ created\ from\ the\ addition.\n
comment12.params=poly
comment12.target=Polynomial\ subtract(Polynomial)
comment12.text=\n\ Subtracts\ two\ Polynomials\ from\ each\ other,\ returning\ the\ result\ from\n\ the\ operation.\n\ @param\ poly\ the\ subtractor;\ the\ one\ with\ the\ minus\ '-'\ sign\ before\ it.\n\ @return\ the\ Polynomial\ created\ from\ the\ subtraction.\n
comment13.params=poly
comment13.target=Polynomial\ mult(Polynomial)
comment13.text=\n\ Multiplies\ two\ Polynomials\ together,\ returning\ the\ result\ from\ the\n\ operation.\n\ @param\ poly\ the\ Polynomial\ which\ is\ being\ multiplied\ to\ the\ one\ being\n\ called.\n\ @return\ the\ Polynomial\ created\ from\ the\ multiplication.\n
comment14.params=poly
comment14.target=Polynomial\ div(Polynomial)
comment14.text=\n\ Divides\ two\ Polynomials\ together,\ returning\ the\ result\ from\ the\n\ operation.\n\ @param\ poly\ the\ Polynomial\ which\ is\ the\ divisor\ to\ the\ one\ being\n\ called.\n\ @return\ the\ Polynomial\ created\ from\ the\ division.\n
comment15.params=
comment15.target=boolean\ isZero()
comment15.text=\n\ Checks\ if\ a\ Polynomial\ contains\ zero\ coefficients.\n\ @return\ true\ if\ the\ Polynomial\ contains\ zero\ coefficients;\ false\n\ otherwise.\n
comment2.params=coeff\ exp
comment2.target=Polynomial(float,\ int)
comment2.text=\n\ Constructs\ a\ Polynomial\ object,\ with\ one\ term\ in\ it.\ This\ is\ also\n\ according\ to\ the\ order\ of\ exponents,\ highest\ to\ lowest.\n\ @param\ coeff\ the\ coefficient\n\ @param\ exp\ the\ exponent\n
comment3.params=a
comment3.target=Polynomial(Polynomial)
comment3.text=\n\ Constructs\ a\ copy\ of\ the\ Polynomial\ object\ passed\ into\ it.\n\ @param\ a\ the\ Polynomial\ object\ to\ be\ copied\n
comment4.params=str
comment4.target=Polynomial(java.lang.String)
comment5.params=
comment5.target=void\ test()
comment5.text=\n\ Tests\ other\ Polynomial\ objects.\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\n\ Creates\ the\ String\ representation\ of\ the\ Polynomial.\ Each\ term\ in\ the\n\ Polynomial\ is\ in\ this\ format\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ +/-\ ax^b\ \ \ \ \ \ \ \ \ \ \ \ \ where\ a\ -\ the\ coefficient\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ b\ -\ the\ exponent\n\ @return\ the\ String\ representation\ of\ the\ Polynomial.\n
comment7.params=
comment7.target=java.util.TreeMap\ getPoly()
comment7.text=\n\ Gets\ the\ TreeMap\ embedded\ within\ the\ Polynomial.\n\ @return\ the\ TreeMap\ of\ the\ Polynomial.\n
comment8.params=poly
comment8.target=void\ setPoly(Polynomial)
comment8.text=\n\ Sets\ the\ Polynomial\ called\ to\ the\ one\ being\ passed\ as\ an\ argument\ by\n\ referencing\ the\ TreeMap\ of\ the\ argument.\n\ @param\ poly\ a\ Polynomial\ that\ will\ be\ referenced\n
comment9.params=obj
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\n\ Compares\ two\ Polynomials\ to\ see\ if\ they\ are\ equal.\ Two\ Polynomials\n\ are\ considered\ equal\ if\ their\ TreeMaps\ are\ equal.\n\ @param\ obj\ an\ Object\n\ @return\ true\ if\ the\ Polynomials\ are\ the\ equal;\ false\ otherwise\n
numComments=16
