#BlueJ class context
comment0.target=PolyFsm
comment0.text=\n\ Parses\ Strings\ for\ Infix\ to\ Postfix\ notation.\n\n\ @author\ Jordan\ Chin\n\ @version\ 1.0\n
comment1.params=input
comment1.target=java.util.Deque\ tokenList(java.lang.String)
comment1.text=\n\ Parses\ a\ String\ input,\ separating\ it\ into\ Polynomial\ Objects,\n\ Operator\ Objects,\ and\ parentheses.\n\ @param\ input\ the\ input\ String,\ which\ should\ be\ in\ the\ form\ of\ a\n\ polynomial\n\ @return\ a\ Deque\ of\ tokens,\ all\ casted\ as\ Objects;\ null\ if\ an\ error\n\ exists\n
comment2.params=o
comment2.target=boolean\ instOfCloseBrac(java.lang.Object)
comment2.text=\ \n\ Checks\ to\ see\ if\ object\ is\ a\ close\ bracket.\n\ @param\ o\ an\ Object\n\ @return\ true\ if\ it\ is\ an\ close\ bracket;\ false\ otherwise\n
comment3.params=o
comment3.target=boolean\ instOfOperator(java.lang.Object)
comment3.text=\n\ Checks\ if\ object\ is\ an\ operator\n\ @param\ o\ an\ Object\n\ @return\ true\ if\ the\ Object\ is\ an\ operator\ by\ character;\ false\n\ otherwise\n
comment4.params=o
comment4.target=boolean\ instOfPoly(java.lang.Object)
comment4.text=\n\ Checks\ if\ Object\ is\ a\ Polynomial\ Object\n\ @param\ o\ an\ Object\n\ @return\ true\ if\ the\ Object\ is\ a\ Polynomial\ Object;\ false\ otherwise\n
comment5.params=c
comment5.target=boolean\ isOperator(java.lang.Character)
comment5.text=\n\ Checks\ if\ the\ character\ is\ an\ operator\n\ @param\ c\ a\ Character\n\ @return\ true\ if\ c\ is\ an\ operator\ character;\ false\ otherwise\n
comment6.params=c
comment6.target=Operator\ operatorObject(java.lang.Character)
comment6.text=\n\ Replaces\ operator\ characters\ with\ Operator\ Objects\n\ @param\ c\ the\ character\ sign\ of\ the\ Operators\n\ @return\ the\ Operator\ which\ the\ character\ sign\ belongs\ to\n
comment7.params=o\ c
comment7.target=boolean\ isNotPreceded(java.lang.Object,\ java.lang.Character)
comment7.text=\n\ Checks\ if\ the\ character\ is\ not\ preceeded\ by\ any\ close\ bracket\ or\n\ Polynomial\n\ @param\ o\ an\ Object\n\ @param\ c\ a\ Character\n\ @return\ true\ if\ the\ character\ is\ not\ precceded;\ false\ otherwise\n
comment8.params=
comment8.target=void\ test()
comment8.text=\n\ Tests\ the\ Finite\ State\ Machine\n
numComments=9
